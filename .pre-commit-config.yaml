# ============================================================================
# PlotPointe - Pre-commit Hooks Configuration
# ============================================================================
# These hooks run automatically before each commit to ensure code quality
# Install: pre-commit install
# Run manually: pre-commit run --all-files
# ============================================================================

repos:
  # ============================================================================
  # General file checks
  # ============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
        exclude: '\.json$'
      - id: check-yaml
        args: ['--unsafe']  # Allow custom YAML tags
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=10000']  # 10MB limit
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: check-ast  # Check Python syntax

  # ============================================================================
  # Python code formatting
  # ============================================================================
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.10
        args: ['--line-length=100']

  # ============================================================================
  # Import sorting
  # ============================================================================
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=100']

  # ============================================================================
  # Linting
  # ============================================================================
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [
          '--max-line-length=100',
          '--extend-ignore=E203,E266,E501,W503',
          '--max-complexity=10',
        ]
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions

  # ============================================================================
  # Type checking (optional - can be slow)
  # ============================================================================
  # Uncomment to enable mypy type checking on every commit
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.8.0
  #   hooks:
  #     - id: mypy
  #       args: ['--ignore-missing-imports', '--python-version=3.10']
  #       additional_dependencies:
  #         - types-requests
  #         - pandas-stubs

  # ============================================================================
  # Security checks
  # ============================================================================
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: '^tests/'

  # ============================================================================
  # Jupyter notebook cleaning (optional)
  # ============================================================================
  - repo: https://github.com/kynan/nbstripout
    rev: 0.7.1
    hooks:
      - id: nbstripout
        description: Strip output from Jupyter notebooks

# ============================================================================
# Configuration
# ============================================================================
default_language_version:
  python: python3.10

# Files to exclude from all hooks
exclude: |
  (?x)^(
      \.venv/.*|
      \.git/.*|
      \.pytest_cache/.*|
      \.mypy_cache/.*|
      __pycache__/.*|
      htmlcov/.*|
      build/.*|
      dist/.*|
      .*\.egg-info/.*|
      tmp/.*|
      data/.*
  )$

# Fail fast - stop on first failure
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: '3.3.0'

